<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Yujie Lu</title>
    <link>https://yujielu10.github.io/</link>
    <description>Recent content on Yujie Lu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://yujielu10.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://yujielu10.github.io/catrans/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://yujielu10.github.io/catrans/</guid>
      <description>Pipeline Strategy </description>
    </item>
    
    <item>
      <title></title>
      <link>https://yujielu10.github.io/drawcall/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://yujielu10.github.io/drawcall/</guid>
      <description>Background In the Browser mode of cocos creator, you can see the value of Drawcall. In our project, the number of drawcalls has exceeded the ideal value, and the demand for drawcall optimization is proposed.
Firstly, by observing the change of the drawcall value through the deactive node method, you can locate the source of a large number of drawcalls (single node or multiple nodes) in the scene. Further analysis produces a large number of drawcall factors.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://yujielu10.github.io/tblackbox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://yujielu10.github.io/tblackbox/</guid>
      <description>BlackBox Framework  MapReduce Task: generate raw files and index files Log Puller(Index Unit): pull data from HDFS(route method: index % sharding no) and generate index files Index Puller(Search Unit): pull index files from &amp;ldquo;Index Unit&amp;rdquo; Search Proxy: handle search request  SearchUnit Module  Load files of last 7 days Search Request Update Invert Lib Info Load files within request duration (start_timestamp, end_timestamp) Search Finish Log Analyze by szl  Sawzall Framework Sample Code  collection sawzall will sort result automatically  proto &amp;#34;/data/szl/proto/log/protofilename.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://yujielu10.github.io/tbotnaive/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://yujielu10.github.io/tbotnaive/</guid>
      <description>Intelligent Dialogue System Demo Report Background Product Requirements Online education products face a large number of repetitive problems from students. In order to reduce the pressure of manual customer service, and to provide students with timely responses and solve student problems, it is necessary to introduce intelligent customer service.
Dialogue Systems for Online Education  Question-Answering System It is basically an interactive mode of &amp;ldquo;one question and one answer&amp;rdquo;, so the construction of a question and answer system generally does not involve dialogue management related technologies.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://yujielu10.github.io/tlog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://yujielu10.github.io/tlog/</guid>
      <description>Framework Tinylog &amp;amp; Tlog Tinylog is mainly responsible for initialization and adding loggers,
public static void init(String appid, Context context) { if(isInitialized){ return; } isInitialized = true; TinyLog.appid = appid; TinyLog.context = context.getApplicationContext(); packageName = Tools.getProcessName(context); ExceptionHandler.init(); } Tlog exposes the interface for printing logs, and sends log requests to different loggers.
public static &amp;lt;T&amp;gt; void i(String tag, T obj) { instance.log(LogLevel.INFO, tag, obj); } public &amp;lt;T&amp;gt; void log(final int priority, final String tag, final T obj) { Iterator&amp;lt;Map.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://yujielu10.github.io/tmonitor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://yujielu10.github.io/tmonitor/</guid>
      <description>Monitor Log Process Log Join  hbase: save log records, serve as tempory storage for log join process Join: high disk I/O of hbase brings intensive JAVA GC manipuations  Log Size Monitor the log size and clear useless fields that take up large memory usage.
Query Size Monitor  request time and delay request number monitor  </description>
    </item>
    
  </channel>
</rss>
